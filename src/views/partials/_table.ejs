<!-- INFO: una tabla generica pára mostrar informacion recibe: headers y data para crear la tabla -->
<div class="container-fluid">
  <!-- Filtro -->
  <div class="row-12">
    <form class="form-inline" id="filter-form">
      <div class="form-group mx-sm-3 mb-2">
        <label for="filter-input" class="sr-only">Filtro</label>
        <input type="text" class="form-control" id="filter-input" placeholder="Filtro">
      </div>
      <button type="submit" class="btn btn-primary mb-2" id="search-btn" >Buscar</button>
      <div class="form-group mx-sm-3 mb-2">
        <input type="text" readonly class="form-control-plaintext" id="resultados" value="23413 resultados">
      </div>
    </form>
  </div>

  <!-- Spinner de carga -->
  <div class="text-center d-none" id="spinner" style="height=100%;>
    <div class="spinner-border" role="status">
      <span class="sr-only">Loading...</span>
    </div>
  </div>

  <!-- Tabla -->
  <div class="row">
    <table class="table" id="table">
      <thead id="table-headers">
        <tr>
          <th scope="col">#</th>
          <th scope="col">First</th>
          <th scope="col">Last</th>
          <th scope="col">Handle</th>
        </tr>
      </thead>
      <tbody id="table-body">
        <tr>
          <th scope="row">1</th>
          <td>Mark</td>
          <td>Otto</td>
          <td>@mdo</td>
        </tr>
        <tr>
          <th scope="row">2</th>
          <td>Jacob</td>
          <td>Thornton</td>
          <td>@fat</td>
        </tr>
        <tr>
          <th scope="row">3</th>
          <td>Larry</td>
          <td>the Bird</td>
          <td>@twitter</td>
        </tr>
        <tr>
          <th scope="row">3</th>
          <td>Larry</td>
          <td>the Bird</td>
          <td>@twitter</td>
        </tr>
        <tr>
          <th scope="row">3</th>
          <td>Larry</td>
          <td>the Bird</td>
          <td>@twitter</td>
        </tr>
        <tr>
          <th scope="row">3</th>
          <td>Larry</td>
          <td>the Bird</td>
          <td>@twitter</td>
        </tr>
        <tr>
          <th scope="row">3</th>
          <td>Larry</td>
          <td>the Bird</td>
          <td>@twitter</td>
        </tr>
        <tr>
          <th scope="row">3</th>
          <td>Larry</td>
          <td>the Bird</td>
          <td>@twitter</td>
        </tr>
        <tr>
          <th scope="row">3</th>
          <td>Larry</td>
          <td>the Bird</td>
          <td>@twitter</td>
        </tr>
        <tr>
          <th scope="row">3</th>
          <td>Larry</td>
          <td>the Bird</td>
          <td>@twitter</td>
        </tr>
      </tbody>
    </table>
  </div>

  <!-- Paginacion -->
  <div class="row">
    <nav aria-label="...">
      <ul class="pagination" id="pagination">
        <li class="page-item">
          <a class="page-link" href="#">Primero</a>
        </li>
        <li class="page-item">
          <a class="page-link" href="#"><<</a>
        </li>
        <li class="page-item active">
          <a class="page-link" href="#">1</a>
        </li>
        <li class="page-item">
          <a class="page-link" href="#">2</a>
        </li>
        <li class="page-item">
          <a class="page-link" href="#">3</a>
        </li>
        <li class="page-item ">
          <a class="page-link" href="#">4</a>
        </li>
        <li class="page-item">
          <a class="page-link" href="#">5</a>
        </li>
        <li class="page-item">
          <a class="page-link" href="#">6</a>
        </li>
        <li class="page-item">
          <a class="page-link" href="#">7</a>
        </li>
        <li class="page-item">
          <a class="page-link" href="#">8</a>
        </li>
        <li class="page-item">
          <a class="page-link" href="#">9</a>
        </li>
        <li class="page-item">
          <a class="page-link" href="#">10</a>
        </li>
        <li class="page-item">
          <a class="page-link" href="#">>></a>
        </li>
        <li class="page-item">
          <a class="page-link" id="last-page" href="#">Último (43)</a>
        </li>
      </ul>
    </nav>
  </div>
</div>

<script>
  const rowsPerPage = 10;

  const spinner = document.getElementById('spinner');
  const filterForm = document.getElementById('filter-form');
  const filterInput = document.getElementById('filter-input');
  const searchBtn = document.getElementById('search-btn');
  const resultados = document.getElementById('resultados');
  const table = document.getElementById('table');
  const tableHeaders = document.getElementById('table-headers');
  const tableBody = document.getElementById('table-body');
  const pagination = document.getElementById('pagination');
  const lastPage = document.getElementById('last-page');

  var urlParams = new URLSearchParams(window.location.search);
  const headers = ["Fecha","Mensaje","Codigo","Latitud","Longitud","Interno","Patente"];
  var selectedPage =  1;
  var pageCount = 10;
  var paginationShift = 0;
  var filter = "";
  var pagePagination = 0;


  var fetchedData = {
    rows:[
      {
        "Patente":"OGH849",
        "Fecha":"2020-04-13T12:27:42.3895267Z",
        "Mensajssse":"Encendido de Motor",
        "Codigo":"113",
        "Interno":"3010",
        "Latitud":-34.558792114257812,
        "Longitud":-58.524879455566406
        
      },
      {
        "Fecha":"2020-04-13T12:27:42.3895267Z",
        "Mensaje":"Encendido de Motor",
        "Codigo":"114",
        "Latitud":-34.558792114257812,
        "Longitud":-58.524879455566406,
        "Interno":"3010",
        "Patente":"OGH849"
      },
      {
        "Fecha":"2020-04-13T12:27:42.3895267Z",
        "Mensaje":"Encendido de Motor",
        "Codigo":"115",
        "Latitud":-34.558792114257812,
        "Longitud":-58.524879455566406,
        "Interno":"3010",
        "Patente":"OGH849"
      }
    ],
    found:632
  };

  function getParameterByName(name, url) {
    if (!url) url = window.location.href;
    name = name.replace(/[\[\]]/g, '\\$&');
    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
        results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, ' '));
}

  function setHeaders(headers){
    tableHeaders.innerHTML = "";
    headers.forEach(header =>{
      tableHeaders.appendChild(document.createElement("th")).
      appendChild(document.createTextNode(header));
    });
  }

  function setRows(rows){
    tableBody.innerHTML = "";
    rows.forEach(row =>{
      var newRow = tableBody.insertRow();
      var i = 0;
      for (i = 0; i < tableHeaders.childNodes.length; i++){
        var key = tableHeaders.childNodes[i].innerHTML;
        if (row.hasOwnProperty(key)){
          var newCell  = newRow.insertCell();
          var newText  = document.createTextNode(row[key]);
          newCell.appendChild(newText);
        }else{
          var newCell  = newRow.insertCell();
          var newText  = document.createTextNode("-");
          newCell.appendChild(newText);
        }
      } 
    });
  }

  function setPageCount(page, total){
    pageCount = Math.trunc((total/10));
    
    if(total%10 != 0)
      pageCount++;

    if(pageCount <= 0)
      pageCount = 1;

    lastPage.innerHTML = `Último (${pageCount})`;

    console.log("table@setPageCount(): %s", pageCount);
  }

  function fetchData(){
    spinner.classList.remove("d-block");
    table.classList.add("d-none");
    pagination.classList.add("d-none");

    let params = {
      "desde": ((selectedPage - 1) * 10),
      "cantidad": 10,
      "buscar": filter 
    };

    let query = Object.keys(params)
      .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))
      .join('&');


    fetch("/api/getlist?" + query, {
      protocol: "http",
      method: 'GET',
      headers: {
      'Content-Type': 'application/json'
      }
    }).then((res) => res.json()
        .then((r)=>{
          console.log(r);
          fetchedData.rows = r[0];
          fetchedData.found = r[1];
          onFetch(fetchedData);
        }));
    //myVar = setTimeout(() => onFetch(fetchedData), 500);//TODO: acá deberia hacer el fetch posta
  }

  function onFetch(data){
    //Apago el spinner y muestro la tabla
    spinner.classList.add("d-none");
    table.classList.remove("d-none");
    pagination.classList.remove("d-none");

    //Muestro la cantidad de resultados encontrados
    resultados.value = data.found.toString() + " resultados";

    //Lleno la tabla con la info recibida
    setHeaders(headers);
    setRows(data.rows);
    setPageCount(selectedPage, data.found);


    //TODO: Ver el flujo del fetch-pageselected
    var aItems = pagination.getElementsByTagName("a");

    //Marco como activa la pagina seleccionada:
    for (var i = 0; i < aItems.length; ++i) {
      aItems[i].parentNode.classList.remove("active");
      if(aItems[i].innerHTML == selectedPage){
        aItems[i].parentNode.classList.add("active");
      }
    }

    //Apago las paginas que no estan en el rango:
    for (var i = 0; i < aItems.length; ++i) {
      aItems[i].parentNode.classList.remove("d-none");
      if(Number(aItems[i].innerHTML) > pageCount){
        aItems[i].parentNode.classList.add("d-none");
      }
    }

  }

  function pageSelected(page) {
    selectedPage = page;
    console.log("table@pageSelected(): selected page: %s", selectedPage);

    var aItems = pagination.getElementsByTagName("a");
    console.log("table@pageSelected(): aItems found: %s", aItems.length);

    //Marco como activa la pagina seleccionada:
    for (var i = 0; i < aItems.length; ++i) {
      aItems[i].parentNode.classList.remove("active");
      if(aItems[i].innerHTML == selectedPage){
        aItems[i].parentNode.classList.add("active");
      }
    }

    //Apago las paginas que no estan en el rango:
    for (var i = 0; i < aItems.length; ++i) {
      aItems[i].parentNode.classList.remove("d-none");
      if(Number(aItems[i].innerHTML) > pageCount){
        aItems[i].parentNode.classList.add("d-none");
      }
    }

    fetchData();
  }

  function onSubmit(event) {
      event.preventDefault();
      console.log("table@search: filter: %s", filterInput.value);
      filter = filterInput.value;
      shiftPagination(-pagePagination);
      pageSelected(1);
  }

  function shiftPagination(shift){
    pagePagination += shift;

    if(pagePagination >= (((fetchedData.found)/100) - 1))
      pagePagination = (((fetchedData.found)/100) - 1);

    if(pagePagination < 0)
      pagePagination = 0;

    pagePagination = Math.trunc(pagePagination);

    console.log("table@ shiftPagination(): pagePagination: %s", pagePagination);

    var items = pagination.getElementsByTagName("a");

    for (var i = 0; i < items.length; ++i) {
      var value = items[i].innerHTML;
      if(!isNaN(value)){
        items[i].innerHTML = i - 1 + pagePagination * 10;
      }
    }

    //TODO: Ver el flujo del fetch-pageselected
    var aItems = pagination.getElementsByTagName("a");

    //Marco como activa la pagina seleccionada:
    for (var i = 0; i < aItems.length; ++i) {
      aItems[i].parentNode.classList.remove("active");
      if(aItems[i].innerHTML == selectedPage){
        aItems[i].parentNode.classList.add("active");
      }
    }

    //Apago las paginas que no estan en el rango:
    for (var i = 0; i < aItems.length; ++i) {
      aItems[i].parentNode.classList.remove("d-none");
      if(Number(aItems[i].innerHTML) > pageCount){
        aItems[i].parentNode.classList.add("d-none");
      }
    }
  }

  function onPagination(event) {
    event.preventDefault();
    //var target = event.target;
    var value = event.target.innerHTML;
    console.log("onPagination value: %s", value);
    if(isNaN(value)){
      switch(value) {
        case "Primero":
          console.log("table@onPagination(): isNan Selected: 'Primero' ");
          shiftPagination(-999999)
          pageSelected(1);
          break;
        case "&lt;&lt;": // '&lt;&lt;' == '<<' para js
          console.log("table@onPagination(): isNan Selected: '<<' ");
          shiftPagination(-1);
          break;
        case "&gt;&gt;": // '&lt;&lt;' == '>>' para js
          console.log("table@onPagination(): isNan Selected: '>>' ");
          shiftPagination(1);
        break;
        default:
          console.log("table@onPagination(): isNan Selected: '%s' ", value);
          shiftPagination(999999)
          pageSelected(pageCount);
          break;
      }
    }
    else{
      console.log("table@onPagination(): Number Selected: '%s' ", value);
      pageSelected(value);
    }
      
  }  

  filterForm.addEventListener('submit',  (e) => onSubmit(e));
  pagination.addEventListener('click', (e) => onPagination(e));
  
  pageSelected(1);

</script>





